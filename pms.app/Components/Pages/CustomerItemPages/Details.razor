@page "/customeritems/details"
@using Microsoft.EntityFrameworkCore;
@using System.Linq.Expressions;
@using pms.app.Models
@using System.Globalization

@inject UnitOfWork.IUnitOfWork unitOfWork
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>


<div class="card">

    <div class="card-header text-white bg-primary">
        <h4>Customer Item Details</h4>
    </div>


    <div class="card-body">
        <div class="row">
            <div class="col-md-12">


                <div>
                    @if (customeritem is null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {
                        <dl class="row">
                            <dt class="col-sm-2">Customer Name</dt>
                            <dd class="col-sm-10">@customeritem.Customer.Name</dd>

                            <dt class="col-sm-2">Customer Address</dt>
                            <dd class="col-sm-10">@customeritem.Customer.Address</dd>

                            <dt class="col-sm-2">Customer City</dt>
                            <dd class="col-sm-10">@customeritem.Customer.City</dd>

                            <dt class="col-sm-2">Customer Email</dt>
                            <dd class="col-sm-10">@customeritem.Customer.Email</dd>

                            <dt class="col-sm-2">Customer Phone</dt>
                            <dd class="col-sm-10">@customeritem.Customer.Phone</dd>

                            <dt class="col-sm-2">Quantity</dt>
                            <dd class="col-sm-10">@customeritem.Quantity</dd>

                            <dt class="col-sm-2">Item Number (SKU)</dt>
                            <dd class="col-sm-10">@customeritem.Item.SKU</dd>

                            <dt class="col-sm-2">Item Name</dt>
                            <dd class="col-sm-10">@customeritem.Item.Name</dd>

                            <dt class="col-sm-2">Item Descriton</dt>
                            <dd class="col-sm-10">@customeritem.Item.Description</dd>

                            <dt class="col-sm-2">Item Category</dt>
                            <dd class="col-sm-10">@customeritem.Item.Category?.Name</dd>

                            <dt class="col-sm-2">Assigned Date</dt>
                            <dd class="col-sm-10">@customeritem.AssignedDate</dd>
                        </dl>
                        <div>
                            <a href="@($"/customeritems/edit?id={customeritem.Id}" )" class="btn btn-sm btn-primary">Edit</a>
                            <a href="@($"/customeritems")" class="btn btn-sm btn-secondary">Back to List</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    CustomerItem? customeritem;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Set up filter
        Expression<Func<CustomerItem, bool>> filter = i => i.Id == Id;

        // Set up includeProperties
        string includeProperties = "Item,Item.Category,Customer";

        // Set up pagination
        int page = 1;
        int pageSize = 500;

        var customerItems = await unitOfWork.GetRepository<CustomerItem>().GetAllAsync(
        filter,
        null,
        includeProperties,
        page,
        pageSize
        );

        customeritem = customerItems.First();

        if (customeritem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
