@page "/customeritems/details"
@inject pms.app.Data.ApplicationDbContext DB
@using pms.app.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>CustomerItem</h4>
    <hr />
    @if (customeritem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CustomerId</dt>
            <dd class="col-sm-10">@customeritem.CustomerId</dd>
            <dt class="col-sm-2">Quantity</dt>
            <dd class="col-sm-10">@customeritem.Quantity</dd>
            <dt class="col-sm-2">ItemId</dt>
            <dd class="col-sm-10">@customeritem.ItemId</dd>
            <dt class="col-sm-2">AssignedDate</dt>
            <dd class="col-sm-10">@customeritem.AssignedDate</dd>
        </dl>
        <div>
            <a href="@($"/customeritems/edit?id={customeritem.Id}")">Edit</a> |
            <a href="@($"/customeritems")">Back to List</a>
        </div>
    }
</div>

@code {
    CustomerItem? customeritem;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        customeritem = await DB.CustomerItems.FirstOrDefaultAsync(m => m.Id == Id);

        if (customeritem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
