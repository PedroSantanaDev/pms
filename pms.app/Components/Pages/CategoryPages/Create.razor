@page "/categories/create"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@using pms.app.Models
@using Microsoft.AspNetCore.Antiforgery

@inject UnitOfWork.IUnitOfWork unitOfWork
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Category" OnValidSubmit="AddCategory" FormName="create">
            <DataAnnotationsValidator />
            <input type="hidden" name="Category.Id" value="@Category.Id" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Category.Name" class="form-control" />
                <ValidationMessage For="() => Category.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label>
                <InputTextArea rows="4" id="description" @bind-Value="Category.Description" class="form-control" />
                <ValidationMessage For="() => Category.Description" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/categories">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    public Category Category { get; set; } = new Category();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddCategory()
    {
        Category.Created = DateTime.Now;
        await unitOfWork.GetRepository<Category>().AddAsync(Category);

        NavigationManager.NavigateTo("/categories");
    }
}