@page "/customers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@using pms.app.Models
@using System.Linq.Expressions;
@using Microsoft.JSInterop

@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject UnitOfWork.IUnitOfWork unitOfWork
@inject NavigationManager NavigationManager
@attribute [Authorize]
<PageTitle>Index</PageTitle>

<div class="card">

    <div class="card-header text-white bg-primary">
        <h4>Customers</h4>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-md-12">

                <p>
                    <a href="customers/create" class="btn btn-primary">Add New</a>
                </p>

                <table class="table table-striped" id="customersTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Address</th>
                            <th>City</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Updated</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var customer in Customers)
                        {
                            <tr>
                                <td>@customer.Name</td>
                                <td>@customer.Email</td>
                                <td>@customer.Phone</td>
                                <td>@customer.Address</td>
                                <td>@customer.City</td>
                                <td>@customer.Status</td>
                                <td>@customer.Created</td>
                                <td>@customer.Updated</td>
                                <td>
                                    <a href="@($"customers/edit?id={customer.Id}")" class="btn btn-sm btn-warning">Edit</a>
                                    <a href="@($"customers/details?id={customer.Id}")" class="btn btn-sm btn-info">Details</a>
                                    <a href="@($"customers/delete?id={customer.Id}")" class="btn btn-sm btn-danger">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

@code {
    List<Customer> Customers { get; set; } = new List<Customer>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("myNamespace.onLoad.StartDataTable", "customersTable");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        // Set up filter
        Expression<Func<Customer, bool>> filter = null;

        Func<IQueryable<Customer>, IOrderedQueryable<Customer>> orderBy = q => q.OrderByDescending(i => i.Created).ThenByDescending(i => i.Updated.HasValue ? i.Updated : DateTime.MinValue);

        // Set up includeProperties
        string includeProperties = "";

        // Set up pagination to max 500 records, out-of-scope
        int page = 1;
        int pageSize = 500;

        Customers = await unitOfWork.GetRepository<Customer>().GetAllAsync(
            filter,
            orderBy,
            includeProperties,
            page,
            pageSize
        );
    }
}